name: Build and Push Docker Image

on:
  workflow_call:
    inputs:
      image_tag_prefix:
        required: true
        type: string
      version_suffix:
        required: true
        type: string

jobs:
  build-push-image:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      # ‚úÖ Debug: Check triggering event
      - name: Debug GitHub event
        run: echo "üîÅ Triggered by: ${{ github.event_name }}"

      # ‚úÖ Debug: Confirm all secrets are present
      - name: Debug secrets presence
        run: |
          if [ -z "${{ secrets.AWS_REGION }}" ]; then echo "‚ùå AWS_REGION is missing"; exit 1; else echo "‚úÖ AWS_REGION is set"; fi
          if [ -z "${{ secrets.AWS_ACCESS_KEY_ID }}" ]; then echo "‚ùå AWS_ACCESS_KEY_ID is missing"; exit 1; else echo "‚úÖ AWS_ACCESS_KEY_ID is set"; fi
          if [ -z "${{ secrets.AWS_SECRET_ACCESS_KEY }}" ]; then echo "‚ùå AWS_SECRET_ACCESS_KEY is missing"; exit 1; else echo "‚úÖ AWS_SECRET_ACCESS_KEY is set"; fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, Tag, and Push Docker Image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: cp2-githubactions
